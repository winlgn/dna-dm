/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package datamining.layout;

import datamining.core.Instances;
import datamining.layout.observer.ArffFile;
import datamining.util.ArffFileReader;
import datamining.util.ArffFileWriter;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;

/**
 *数据集显示
 * @author LiuGuining
 */
public class ArffFileViewer extends javax.swing.JFrame {

    private Instances dataSet;
    private CustomTableModel tableModel;
    private ArffFile arffFile;

    /**
     * Creates new form ArffFileViewer
     */
    public ArffFileViewer(Instances dataSet, ArffFile arffFile) {
        this.dataSet = dataSet;
        this.arffFile = arffFile;
        this.tableModel = new CustomTableModel(dataSet);
        initComponents();
        jLabel1.setText(" Relation: " + dataSet.getRelationName());
        initTable();
        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                if (!tableModel.isActionListEmpty()) {
                    int showConfirmDialog = JOptionPane.showConfirmDialog(null,
                            "更改未保存，是否要退出？", "退出确认",
                            JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    switch (showConfirmDialog) {
                        case JOptionPane.YES_OPTION:
                            getThis().dispose();
                            break;
                        case JOptionPane.NO_OPTION:
                            break;
                    }
                } else {
                    getThis().dispose();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        addRowMenuItem = new javax.swing.JMenuItem();
        addMultiRowsMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        deleteRowMenuItem = new javax.swing.JMenuItem();
        deleteAllSelectedRowsMenuItem = new javax.swing.JMenuItem();
        arffFileChooser = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        reduceAttributeMenuItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        closeMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        undoMenuItem = new javax.swing.JMenuItem();
        redoMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        addRowMenuItem.setText("添加行");
        addRowMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRowMenuItemActionPerformed(evt);
            }
        });
        jPopupMenu1.add(addRowMenuItem);

        addMultiRowsMenuItem.setText("添加多行...");
        addMultiRowsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMultiRowsMenuItemActionPerformed(evt);
            }
        });
        jPopupMenu1.add(addMultiRowsMenuItem);
        jPopupMenu1.add(jSeparator1);

        deleteRowMenuItem.setText("删除该行");
        deleteRowMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRowMenuItemActionPerformed(evt);
            }
        });
        jPopupMenu1.add(deleteRowMenuItem);

        deleteAllSelectedRowsMenuItem.setText("删除所有选中行...");
        deleteAllSelectedRowsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllSelectedRowsMenuItemActionPerformed(evt);
            }
        });
        jPopupMenu1.add(deleteAllSelectedRowsMenuItem);

        arffFileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        arffFileChooser.setDialogTitle("另存为...");
        arffFileChooser.setFileFilter(new FileNameExtensionFilter("ARFF文件(*.arff)", "arff"));

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setText(" ");

        jLabel2.setText(" ");

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(tableModel);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setComponentPopupMenu(jPopupMenu1);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        fileMenu.setMnemonic('f');
        fileMenu.setText("文件(F)");

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("保存(S)");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("另存为(A)...");
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);

        reduceAttributeMenuItem.setMnemonic('r');
        reduceAttributeMenuItem.setText("属性约减(R)...");
        reduceAttributeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reduceAttributeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(reduceAttributeMenuItem);
        fileMenu.add(jSeparator4);

        closeMenuItem.setMnemonic('x');
        closeMenuItem.setText("关闭(X)");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(closeMenuItem);

        jMenuBar1.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("编辑(E)");
        editMenu.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                editMenuMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
        });

        undoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        undoMenuItem.setMnemonic('u');
        undoMenuItem.setText("撤销(U)");
        undoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(undoMenuItem);

        redoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        redoMenuItem.setMnemonic('r');
        redoMenuItem.setText("恢复(R)");
        redoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(redoMenuItem);
        editMenu.add(jSeparator2);

        jMenuItem1.setText("添加行");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRowMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(jMenuItem1);

        jMenuItem2.setText("添加多行...");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMultiRowsMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(jMenuItem2);
        editMenu.add(jSeparator3);

        jMenuItem3.setText("删除该行");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRowMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(jMenuItem3);

        jMenuItem4.setText("删除所有选中行...");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllSelectedRowsMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(jMenuItem4);

        jMenuBar1.add(editMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editMenuMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_editMenuMenuSelected
        redoMenuItem.setEnabled(tableModel.canRedo());
        undoMenuItem.setEnabled(tableModel.canUndo());
    }//GEN-LAST:event_editMenuMenuSelected

    private void undoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoMenuItemActionPerformed
        tableModel.undo();
    }//GEN-LAST:event_undoMenuItemActionPerformed

    private void redoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoMenuItemActionPerformed
        tableModel.redo();
    }//GEN-LAST:event_redoMenuItemActionPerformed

    private void addRowMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRowMenuItemActionPerformed
        if (jTable1.getSelectedRow() >= 0) {
            tableModel.insertRows(jTable1.getSelectedRow(), 1);

        }
    }//GEN-LAST:event_addRowMenuItemActionPerformed

    private void addMultiRowsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMultiRowsMenuItemActionPerformed
        if (jTable1.getSelectedRow() >= 0) {
            String showInputDialog = JOptionPane.showInputDialog("输入行数", 1);
            try {
                tableModel.insertRows(jTable1.getSelectedRow(), Integer.parseInt(showInputDialog));
            } catch (NumberFormatException ex) {
            }

        }
    }//GEN-LAST:event_addMultiRowsMenuItemActionPerformed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        StringBuilder sb = new StringBuilder(" 行：");
        sb.append(jTable1.getSelectedRow() + 1);
        sb.append("  列：").append(jTable1.getSelectedColumn() + 1);
        if (jTable1.getSelectedRowCount() > 1) {
            sb.append("  选中行数：").append(jTable1.getSelectedRowCount());
        }
        jLabel2.setText(sb.toString());
    }//GEN-LAST:event_jTable1KeyReleased

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        StringBuilder sb = new StringBuilder(" 行：");
        sb.append(jTable1.getSelectedRow() + 1);
        sb.append("  列：").append(jTable1.getSelectedColumn() + 1);
        if (jTable1.getSelectedRowCount() > 1) {
            sb.append("  选中行数：").append(jTable1.getSelectedRowCount());
        }
        jLabel2.setText(sb.toString());
    }//GEN-LAST:event_jTable1MouseReleased

    private void deleteRowMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRowMenuItemActionPerformed
        tableModel.deleteRows(new int[]{jTable1.convertRowIndexToModel(jTable1.getSelectedRow())});
    }//GEN-LAST:event_deleteRowMenuItemActionPerformed

    private void deleteAllSelectedRowsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAllSelectedRowsMenuItemActionPerformed
        int[] select = new int[jTable1.getSelectedRows().length];
        for (int i = 0; i < select.length; i++) {
            select[i] = jTable1.convertRowIndexToModel((jTable1.getSelectedRows())[i]);

        }
        tableModel.deleteRows(select);
    }//GEN-LAST:event_deleteAllSelectedRowsMenuItemActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
        int returnVal = arffFileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File f = arffFileChooser.getSelectedFile();
            if (!f.getName().contains(".")) {
                f = new File(f.getAbsolutePath() + ".arff");
            }
            if (f.exists()) {
                int value = JOptionPane.showConfirmDialog(rootPane,
                        "该文件已经存在，是否要覆盖？", "覆盖提示",
                        JOptionPane.YES_NO_OPTION);
                if (value != JOptionPane.YES_OPTION) {
                    return;
                }
            }

            ArffFileWriter writer = new ArffFileWriter(f);
            try {
                writer.write(tableModel.getDataSet());
                writer.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(rootPane, "文件保存错误。",
                        "错误", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(ArffFileViewer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_saveAsMenuItemActionPerformed

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
        if (!tableModel.isActionListEmpty()) {
            int showConfirmDialog = JOptionPane.showConfirmDialog(rootPane,
                    "更改未保存，是否要退出？", "退出确认",
                    JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            switch (showConfirmDialog) {
                case JOptionPane.YES_OPTION:
                    this.dispose();
                    break;
                case JOptionPane.NO_OPTION:
                    break;
            }
        } else {
            this.dispose();
        }
    }//GEN-LAST:event_closeMenuItemActionPerformed

    private void reduceAttributeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reduceAttributeMenuItemActionPerformed
        String input = JOptionPane.showInputDialog(rootPane,
                "各序列用\",\"分割(不含引号)", "输入约减属性Index序列", JOptionPane.QUESTION_MESSAGE);
        String[] split = input.split(",");
        int[] indexes = new int[split.length];
        try {
            for (int i = 0; i < indexes.length; i++) {
                indexes[i] = Integer.parseInt(split[i]);
            }
            if (!tableModel.reduceAttribute(indexes)) {
                throw new Exception();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "输入序列错误", "错误", JOptionPane.ERROR_MESSAGE);
        }

        initTable();
    }//GEN-LAST:event_reduceAttributeMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        tableModel.save();
        tableModel.clearActionList();
        if (arffFile != null) {
            arffFile.setDataSet(tableModel.getDataSet());
        }
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void initTable() {
        JComboBox<Integer> classList = new JComboBox<>(tableModel.getClassIndexes());
        JTableHeader header = jTable1.getTableHeader();
        //设置表头格式
//        DefaultTableCellHeaderRenderer cellHeaderRenderer = new DefaultTableCellHeaderRenderer();
//        cellHeaderRenderer.setHorizontalAlignment(JLabel.CENTER);
        TableColumnModel columnModel = header.getColumnModel();
//        header.setDefaultRenderer(cellHeaderRenderer);
        //设置表格格式
        DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
        cellRenderer.setHorizontalAlignment(JLabel.RIGHT);
        for (int i = 1; i < columnModel.getColumnCount() - 1; i++) {
            columnModel.getColumn(i).setCellRenderer(cellRenderer);
        }
        columnModel.getColumn(columnModel.getColumnCount() - 1).setCellEditor(new DefaultCellEditor(classList));
    }

    private ArffFileViewer getThis() {
        return this;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                    break;


                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArffFileViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                ArffFileReader reader = new ArffFileReader("D:" + File.separator + "test.arff");

                new ArffFileViewer(reader.getDataSet(), null).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addMultiRowsMenuItem;
    private javax.swing.JMenuItem addRowMenuItem;
    private javax.swing.JFileChooser arffFileChooser;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JMenuItem deleteAllSelectedRowsMenuItem;
    private javax.swing.JMenuItem deleteRowMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuItem redoMenuItem;
    private javax.swing.JMenuItem reduceAttributeMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JMenuItem undoMenuItem;
    // End of variables declaration//GEN-END:variables
}
