/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package datamining.layout;

import datamining.attributeselection.IAttributeSelection;
import datamining.core.Attribute;
import datamining.core.Instances;
import datamining.util.ArffFileReader;
import datamining.util.PropertiesUtil;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author LiuGuining
 */
public class AttributeSelectFrame extends javax.swing.JFrame {

    private Instances dataSet;
    private int[] firstKAttributes;
    private int kValue;
    private IAttributeSelection attributeSelection;
    private ProgressDialog dialog;
    private String attributeSelectionMethod;

    /**
     * Creates new form AttributeSelectFrame
     */
    public AttributeSelectFrame() {
        initComponents();
    }

    public AttributeSelectFrame(Instances dataSet) {
        this.dataSet = dataSet;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        saveToFileMenuItem = new javax.swing.JMenuItem();
        copyToClipboardMenuItem = new javax.swing.JMenuItem();
        txtFileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        SelecterCombox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        kSpinner = new javax.swing.JSpinner();
        runButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        saveToFileMenuItem.setText("保存到文件...");
        saveToFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToFileMenuItemActionPerformed(evt);
            }
        });
        jPopupMenu1.add(saveToFileMenuItem);

        copyToClipboardMenuItem.setText("复制到剪贴板");
        copyToClipboardMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyToClipboardMenuItemActionPerformed(evt);
            }
        });
        jPopupMenu1.add(copyToClipboardMenuItem);

        txtFileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        txtFileChooser.setDialogTitle("保存到文件...");
        txtFileChooser.setFileFilter(new FileNameExtensionFilter("TEXT File (*.txt)", "txt"));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("特征选择");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("特征选择方法：");

        SelecterCombox.setModel(new javax.swing.DefaultComboBoxModel(PropertiesUtil.getPropItems(PropertiesUtil.ATTIBUTE_SELECTION)));

        jLabel2.setText("K");

        kSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf((10<dataSet.getAttributes().size()-1)?10:dataSet.getAttributes().size()-1), Integer.valueOf(2), Integer.valueOf(dataSet.getAttributes().size()-1), Integer.valueOf(1)));
        kSpinner.setMinimumSize(new java.awt.Dimension(30, 22));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SelecterCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(SelecterCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(kSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        runButton.setText("选择");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("特征选择结果"));

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(5);
        jTextArea1.setComponentPopupMenu(jPopupMenu1);
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(runButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(runButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-445)/2, (screenSize.height-528)/2, 445, 528);
    }// </editor-fold>//GEN-END:initComponents

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        attributeSelectionMethod = (String) SelecterCombox.getSelectedItem();
        firstKAttributes = null;
        kValue = (int) kSpinner.getValue();
        attributeSelection = PropertiesUtil.getAttributeSelection(attributeSelectionMethod);
        dialog = new ProgressDialog(this, false);
        dialog.setPoint("数据处理中...");
        dialog.setVisible(true);
        new Thread(new Runnable() {

            @Override
            public void run() {
                firstKAttributes = attributeSelection.getFirstKAttributes(dataSet, kValue);
                dialog.dispose();
                if (firstKAttributes != null) {
                    jTextArea1.setText(output(dataSet, attributeSelectionMethod, firstKAttributes, kValue));
                }
            }
        }).start();
    }//GEN-LAST:event_runButtonActionPerformed

    private void saveToFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToFileMenuItemActionPerformed
        String result = jTextArea1.getText();
        if (result.length() == 0) {
            return;
        }

        int returnVal = txtFileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File f = txtFileChooser.getSelectedFile();
            if (!f.getName().contains(".")) {
                f = new File(f.getAbsolutePath() + ".txt");
            }
            if (f.exists()) {
                int value = JOptionPane.showConfirmDialog(this, "该文件已经存在，是否要覆盖？", "覆盖提示", JOptionPane.YES_NO_OPTION);
                if (value != JOptionPane.YES_OPTION) {
                    return;
                }
            }

            try (FileWriter writer = new FileWriter(f)) {
                writer.write(result.replace("\n", "\r\n"));
                writer.flush();
            } catch (IOException ex) {
                Logger.getLogger(ClassifyFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_saveToFileMenuItemActionPerformed

    private void jTextArea1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea1MouseClicked

    private void copyToClipboardMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyToClipboardMenuItemActionPerformed
        StringBuilder data = new StringBuilder();
        if (firstKAttributes != null) {
            for (int i = 0; i < firstKAttributes.length - 1; i++) {
                data.append(firstKAttributes[i]).append(",");
            }
            data.append(firstKAttributes[firstKAttributes.length - 1]);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            Transferable tranData = new StringSelection(data.toString());
            clipboard.setContents(tranData, null);
        }
    }//GEN-LAST:event_copyToClipboardMenuItemActionPerformed
    private static String output(Instances inst, String scheme, int[] index, int kValue) {
        //生成时间
        StringBuilder builder = new StringBuilder("=====INFORMATION=====\n");
        builder.append("Build Time:\t");
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        builder.append(dateFormat.format(new Date()));
        builder.append("\n");
        //Relation name
        builder.append("Relation Name:\t");
        builder.append(inst.getRelationName());
        builder.append("\n");
        //Instances size
        builder.append("Instances Size:\t");
        builder.append(inst.getInstances().size());
        builder.append("\n");
        //Attributes size
        builder.append("Attribute Size:\t");
        builder.append(inst.getAttributes().size());
        builder.append("\n");
        //Attributes list
        List<Attribute> list = inst.getAttributes();
        Iterator<Attribute> iter = list.iterator();
        while (iter.hasNext()) {
            Attribute attribute = iter.next();
            builder.append("\t\t");
            builder.append(attribute.getAttributeName());
            builder.append("\n");
        }
        //Selection method
        builder.append("Select Method:\t");
        builder.append(scheme);
        builder.append("\n");
        builder.append("K Value:\t");
        builder.append(kValue);
        builder.append("\n");

        //Index ,value
        builder.append("\n=====RESULT=====\n");
        builder.append("#ID\tIndex\n");
        int len = String.valueOf(index.length + 1).length();
        int len_1 = String.valueOf(inst.numAttributes() + 1).length();
        for (int i = 0; i < index.length; i++) {
            int len_2 = String.valueOf(i + 1).length() - 1;
            for (int j = 0; j < len - len_2; j++) {
                builder.append(" ");
            }
            builder.append((i + 1));
            builder.append("\t");
            int len_3 = String.valueOf(index[i]).length() - 1;
            for (int j = 0; j < len - (len_3); j++) {
                builder.append(" ");
            }
            builder.append(index[i]);
            builder.append("\n");
        }


        return builder.toString();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());


        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttributeSelectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                ArffFileReader reader = new ArffFileReader("D:" + File.separator + "colon.arff");

                new AttributeSelectFrame(reader.getDataSet()).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox SelecterCombox;
    private javax.swing.JMenuItem copyToClipboardMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JSpinner kSpinner;
    private javax.swing.JButton runButton;
    private javax.swing.JMenuItem saveToFileMenuItem;
    private javax.swing.JFileChooser txtFileChooser;
    // End of variables declaration//GEN-END:variables
}
